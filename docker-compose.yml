services:
  web:
    # Сборка на основе Dockerfile
    build: .
    # Перед запуском приложения выполняются миграции БД
    command: sh -c ' uvicorn app.main:app --reload --host 0.0.0.0 --port 80 --workers 4'
    volumes:
      - .:/app
    ports:
      - "80:80"
    env_file: ".env"
    # Контейнеры приложения и СУБД будут в одной сети
    networks:
      - my-education-music-project
    # Контейнер приложения запускается после проверки работоспособности СУБД
    depends_on:
      db:
        condition: service_healthy
        restart: true

  db:
    image: postgres:12.5
    # Проверка работоспособности СУБД
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    # Том для сохранения данных после завершения работы контейнера
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./postgres.env
    ports:
      - "5432:5432"
    networks:
      - my-education-music-project

networks:
      my-education-music-project:
        driver: bridge

volumes:
  postgres_data:
## docker-compose.yml
#services:
#  my-education-music-project-db:
#    image: postgres:12.5
#  #Разработка серверных приложений с помощью FastAPI
#    environment:
#      POSTGRES_USER: fastapi_music
#      POSTGRES_PASSWORD: fastapi_music
#      POSTGRES_DB: music_project
#    ports:
#      - "5432:5432"
#    networks:
#    - my-education-music-project
#networks:
#    my-education-music-project:
#      driver: bridge
